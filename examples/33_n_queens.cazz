include "lib/std.cazz"
def 'N' '8'
def 'DEBUG' 'false'

'board array N Number

'init_board :['k 0 - 1 loop 'i' N '[change board i k] if DEBUG [print "BOARD OK"]]

'is_safe :[
  'x Number
  'y Number
  if DEBUG [prin "IS SAFE " prin x prin "-" prin y print " ?"]
  if x = 0 [if DEBUG [prin "YES IT IS!"] return true]
  'i 0 
  while i < x [
    'posi board at i
    if posi = y [return false]
    if posi = y + x - i [return false]
    if posi = y - x + i [return false]
    inc i
  ]
  true
]

'print_board :[
  loop 'i' N '[prin board at i]
  print ""
]

'n_queens :[  
  'x 0
  'sol_num 0
  while x < N [    
    'y [board at x] + 1
    if DEBUG [prin "X: " print x]
    if DEBUG [prin "Y: " print y]
    if DEBUG [prin "IS SAFE: " print is_safe x y]
    if DEBUG [prin "Y" prin y prin " N" print N]
    while [is_safe x y] ! and y < N [ if DEBUG [print y] inc y ]
    
    if DEBUG [prin "OUT OF LOOP Y: " print y]
    either y = N [
      change board x 0 - 1
      if x = 0 [
        ;no solutions left
        if DEBUG [print "NO SOLUTIONS LEFT"]
        return false
      ]
      if DEBUG [print "BACK ONE COL"]
      x: x - 1      
    ] [
      if DEBUG [prin "Y: " prin y prin " IS SAFE AT X: " print x]
      change board x y
      either x = N - 1 [
        ; found solution
        if DEBUG [print "FOUND A SOLUTION"]
        inc sol_num
        prin "SOLUTION " prin sol_num prin ": " print_board
      ] [
        if DEBUG [print "TRY NEXT COL"]
        inc x
      ]
    ]
  ]
  true
]

init_board 
n_queens