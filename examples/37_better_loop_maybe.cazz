include "lib/std.cazz"

def mul :['x Number 'y Number
  'i 0
  'limit y
  while i < limit [
    prin x if i < limit - 1 [prin " + "]
    inc i
  ]  
  ; loop y do yield [x] if i < y - 1 [yield [+]] end
  ;x + x + ... + x  y times
]

def betterloop? :[
  'var String
  'count Number
  'body String
  prin si "[ '$var 0 while $var < " prin count  prin si " [$body inc $var]]"  
]


betterloop? "k" 10 / 2 "print mul 2 3"
