include "lib/c64.cazz"

'asm_clear_bottom_line :[
  'buf ""
  'i 2024 - 40  
  buf: buf . "\"LDA #32\" "
  while i < 2024 [    
    buf: buf . "\"STA " . i !str . "\" "
    inc i
  ]
  buf !word
]

; time 822
'scroll :[
  'row 1  
  while row < 25 [
    'col 0
    while col < 40 [
      'addr 1024 + row * 40 + col
      poke addr - 40 peek addr
      inc col
    ]
    inc row
  ]
  asm [asm_clear_bottom_line]
]

; time 192
'scroll2 :[
  'loc 1024 + 40  
  'dest 1024
  while loc < 2024 [    
    poke dest peek loc    
    inc loc
    inc dest
  ]
  asm [asm_clear_bottom_line]
]

'asm_scroll_screen3 :[
  'i 1064
  'buffer ""
  while i < 2024 [
    'dest i - 40    
    buffer: buffer . "\"LDA " . i !str . "\" \"STA " . dest !str . "\" "    
    inc i
  ]
  buffer !word
]

; time 7
'scroll3 :[
  asm [ 
    asm_scroll_screen3 
    asm_clear_bottom_line
  ]
]

'N 30
start_random
'start1 time
loop 'i' 'N' '[
  poke 1024 + 24 * 40 + rnd 40 1 !<
  scroll
]

'start2 time
loop 'i' 'N' '[
  poke 1024 + 24 * 40 + rnd 40 1 !<
  scroll2  
]

'start3 time
loop 'i' 'N' '[
  poke 1024 + 24 * 40 + rnd 40 1 !<  
  asm ["JSR SCROLL_UP"]  
]

'start4 time
loop 'i' 'N' '[
  poke 1024 + 24 * 40 + rnd 40 1 !<  
  scroll3
]

'end_time time

prin "SCROLL  :" print  start2   - start1
prin "SCROLL2 :" print  start3   - start2
prin "SCROLL4 :" print  start4   - start3
prin "SCROLL3 :" print  end_time - start4
